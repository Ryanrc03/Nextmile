╔════════════════════════════════════════════════════════════════════════╗
║                  Nextmile 项目迁移 - 快速参考卡                       ║
╚════════════════════════════════════════════════════════════════════════╝

📦 一. 最快部署方式（推荐）
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
在新服务器上执行：
  $ git clone https://github.com/Ryanrc03/Nextmile.git
  $ cd Nextmile
  $ ./scripts/deploy_to_new_server.sh --domain 你的域名.com --email 你的邮箱@example.com

完成！🎉

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📋 二. 完整迁移流程（3步）
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1️⃣  在旧服务器备份
   $ ssh 旧服务器
   $ cd Nextmile
   $ ./scripts/backup_before_migration.sh
   $ exit
   下载备份: scp -i key.pem ec2-user@旧服务器:~/migration_backup_*.tar.gz .

2️⃣  在新服务器部署
   $ ssh 新服务器
   $ git clone https://github.com/Ryanrc03/Nextmile.git
   $ cd Nextmile
   $ ./scripts/deploy_to_new_server.sh --domain 域名.com --email 邮箱@example.com

3️⃣  迁移数据
   上传备份: scp -i key.pem migration_backup_*.tar.gz ec2-user@新服务器:~/
   $ ssh 新服务器
   $ cd Nextmile
   $ ./scripts/migrate_data.sh --from 旧服务器IP --ssh-key ~/.ssh/key.pem

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🛠️  三. 可用脚本
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

脚本名                          说明                    运行位置
──────────────────────────────────────────────────────────────────────
deploy_to_new_server.sh         🚀 主部署脚本           新服务器
init_new_server.sh              🔧 初始化环境           新服务器
backup_before_migration.sh      💾 备份数据             旧服务器
migrate_data.sh                 📦 迁移数据             新服务器
check_deployment.sh             ✅ 检查状态             新服务器

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
⚙️  四. 主脚本参数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

deploy_to_new_server.sh 参数:

  --domain <域名>           ✅ 必需
  --email <邮箱>            ✅ 必需（不跳过SSL时）
  --db-host <主机>          可选（默认: localhost）
  --db-name <数据库名>      可选（默认: nextmile_db）
  --db-user <用户名>        可选（默认: nextmile_user）
  --db-password <密码>      可选
  --skip-ssl               跳过SSL配置
  --skip-db                跳过数据库安装
  --project-dir <路径>      可选（默认: /home/ec2-user/Nextmile）

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📌 五. 使用示例
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# 标准部署
./scripts/deploy_to_new_server.sh \
  --domain nextmile.space \
  --email admin@nextmile.space

# 跳过SSL（手动配置）
./scripts/deploy_to_new_server.sh \
  --domain nextmile.space \
  --skip-ssl

# 使用外部数据库（如 AWS RDS）
./scripts/deploy_to_new_server.sh \
  --domain nextmile.space \
  --email admin@nextmile.space \
  --db-host mydb.xxxx.rds.amazonaws.com \
  --db-user admin \
  --db-password secret123 \
  --skip-db

# 数据迁移
./scripts/migrate_data.sh \
  --from 54.123.45.67 \
  --ssh-key ~/.ssh/my-key.pem

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
✅ 六. 部署后检查
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# 运行状态检查脚本
$ ./scripts/check_deployment.sh

# 手动检查
$ pm2 status                              # PM2 进程
$ sudo systemctl status nginx             # Nginx 状态
$ curl http://localhost:3000              # 前端测试
$ curl http://localhost:8000/health       # API 测试

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔧 七. 常用管理命令
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

PM2:
  pm2 status              查看进程状态
  pm2 logs                查看日志
  pm2 restart all         重启所有服务
  pm2 monit              实时监控

Nginx:
  sudo nginx -t                          测试配置
  sudo systemctl restart nginx           重启服务
  sudo tail -f /var/log/nginx/error.log  查看错误日志

环境变量:
  nano .env.production    编辑配置
  pm2 restart all         重启生效

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🌐 八. DNS 配置
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

在域名注册商添加 A 记录:
  主机名: @
  类型:   A
  值:     新服务器IP地址
  TTL:    3600

等待 DNS 生效（5-30分钟）

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔐 九. AWS 安全组配置
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

必须开放的端口:
  HTTP  (80)   - 0.0.0.0/0
  HTTPS (443)  - 0.0.0.0/0
  SSH   (22)   - 你的IP/32 （推荐限制）

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📚 十. 文档资源
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

DEPLOYMENT_SCRIPTS_GUIDE.md    脚本详细使用指南
MIGRATION_GUIDE.md              完整迁移教程（手动步骤）
scripts/README.md               脚本目录说明

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🐛 十一. 故障排查
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

脚本失败:
  bash -x ./scripts/deploy_to_new_server.sh ...  # 调试模式

应用不启动:
  pm2 logs                                        # 查看日志
  sudo lsof -i :3000                              # 检查端口

SSL 问题:
  sudo certbot certificates                       # 查看证书
  sudo certbot --nginx -d 域名.com                # 重新获取

数据库:
  mysql -u nextmile_user -p nextmile_db           # 测试连接
  sudo systemctl status mysqld                    # 检查服务

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
💡 十二. 最佳实践
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. 部署前先备份旧服务器数据
2. 确保新服务器至少有 2GB RAM
3. 先配置 DNS，等待生效后再部署（避免 SSL 获取失败）
4. 部署后立即运行 check_deployment.sh 验证
5. 修改 .env.production 中的敏感信息
6. 配置自动备份（crontab）
7. 定期更新系统和依赖

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

💬 需要帮助？
   查看详细文档或提交 GitHub Issue

🎉 祝部署顺利！

╚════════════════════════════════════════════════════════════════════════╝
